#include <iostream>
#include<string>
using namespace std;
char solve(char c){
    switch(c){
        case 'w':
        return 'q';
        case 'e':
        return 'w';
        case 'r': 
        return 'e';
        case 't':
        return 'r';
        case 'y':
        return 't';
        case 'u':
        return 'y';
        case 'i':
        return 'u';
        case 'o':
        return 'i';
        case 'p':
        return 'o';
        case '[':
        return 'p';
        case ']':
        return '[';
        case '\\':
        return ']';
        case '2':
        return '1';
        case '3':
        return '2';
        case '4':
        return '3';
        case '5':
        return '4';
        case '6':
        return '5';
        case '7':
        return '6';
        case '8':
        return '7';
        case '9':
        return '8';
        case '0':
        return '9';
        case '-':
        return '0';
        case '=':
        return '-';
        case 's':
        return 'a';
        case 'd':
        return 's';
        case 'f':
        return 'd';
        case 'g':
        return 'f';
        case 'h':
        return 'g';
        case 'j':
        return 'h';
        case 'k':
        return 'j';
        case 'l':
        return 'k';
        case '\;':
        return 'l';
        case '\'':
        return '\;';
        case 'x':
        return 'z';
        case 'c':
        return 'x';
        case 'v':
        return 'c';
        case 'b':
        return 'v';
        case 'n':
        return 'b';
        case 'm':
        return 'n';
        case ',':
        return 'm';
        case '.':
        return ',';
        case '\/':
        return '.';
        case '1':
        return '`';
        default:
        return c;
        }
}
int main() {
	// your code goes here
	string s; bool flag = 0;
	while( getline(cin, s, '\n')){
	for(int i = 0; i < s.length(); i++){
	    if(isupper(s[i]))
	        flag = 1;
	    else
	        flag = 0;
	   s[i] = tolower(s[i]);
	    s[i] = solve(s[i]);
	        s[i] = toupper(s[i]);
	}
	cout << s << endl;
}
	return 0;
}
